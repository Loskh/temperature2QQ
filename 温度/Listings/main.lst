C51 COMPILER V9.54   MAIN                                                                  05/29/2017 15:21:37 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

*** WARNING C500 IN LINE 1 OF main.c: LICENSE ERROR (R207(3): REGISTRY READ ERROR)

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #define uint unsigned int
   4          #define uchar unsigned char
   5          sbit lcdrs=P2^0;
   6          sbit lcdrw=P2^1;
   7          sbit lcden=P2^2;
   8          sbit dout=P1^0;
   9          sbit sclk=P1^1;
  10          sbit cs=P1^2;
  11          uchar code table[]= {0x18,0x18,0x07,0x08,0x08,0x08,0x07,0x00};
  12          uchar tt;
  13          uchar dat;
  14          bit send=0;
  15          unsigned char UART_buff;
  16          unsigned char b[5];
  17          void delay(uint a) {
  18   1          uint x,y;
  19   1          for(x=a; x>0; x--)
  20   1            for(y=110; y>0; y--);
  21   1      }
  22          void uart_send() {
  23   1          uchar i;
  24   1          for(i=0; i<5; i++) {
  25   2              SBUF=b[i]+0x30;
  26   2              while(!TI);
  27   2              TI=0;
  28   2          }
  29   1          send=0;
  30   1      }
  31          void timeinit() {
  32   1          TMOD=0x21;
  33   1          TH1=0XFD;
  34   1          TH1=0XFD;
  35   1          TH0=(65536-50000)/256;
  36   1          TL0=(65536-50000)%256;
  37   1          EA=1;
  38   1          TR1=1;
  39   1          ET0=1;
  40   1          TR0=1;
  41   1          SCON=0x50;
  42   1          ES=1;
  43   1      }
  44          uint read_adc() {
  45   1          uint voltage_temp=0;
  46   1          uchar ucloop=12;
  47   1          cs=1;
  48   1          sclk=0;
  49   1          cs=0;
  50   1          while(dout==0);
  51   1          sclk=1;
  52   1          sclk=0;
  53   1          while(ucloop--) {
C51 COMPILER V9.54   MAIN                                                                  05/29/2017 15:21:37 PAGE 2   

  54   2              sclk=1;
  55   2              voltage_temp<<=1;
  56   2              if(dout==1)
  57   2                  voltage_temp+=1;
  58   2              sclk=0;
  59   2          }
  60   1          cs=1;
  61   1          return voltage_temp;  
  62   1      }
  63          void lcdwrite_com(uchar com) {
  64   1          lcdrs=0;
  65   1          lcdrw=0;
  66   1          P0=com;
  67   1          delay(15);
  68   1          lcden=1;
  69   1          delay(15);
  70   1          lcden=0;
  71   1      }
  72          void lcdwrite_data(uchar dat) {
  73   1          lcdrs=1;
  74   1          lcdrw=0;
  75   1          P0=dat;
  76   1          delay(15);
  77   1          lcden=1;
  78   1          delay(15);
  79   1          lcden=0;
  80   1      }
  81          void lcd1602_init() {
  82   1          lcden=0;
  83   1          lcdwrite_com(0x38);
  84   1          lcdwrite_com(0x0c);
  85   1          lcdwrite_com(0x06);
  86   1          lcdwrite_com(0x01);
  87   1      }
  88          void lcd1602_ground() {
  89   1          uchar i;
  90   1          lcdwrite_com(0x80);
  91   1          lcdwrite_data('T');
  92   1          lcdwrite_data('E');
  93   1          lcdwrite_data('M');
  94   1          lcdwrite_data('P');
  95   1          lcdwrite_data(':');
  96   1          lcdwrite_com(0x40);
  97   1          for(i=0; i<8; i++)
  98   1              lcdwrite_data(table[i]);
  99   1          lcdwrite_com(0x80+0x46);
 100   1          lcdwrite_data(0x00);
 101   1      
 102   1      }
 103          void lcd1602_refresh(uint dat) {
 104   1          float tvalue;
 105   1          uint t;
 106   1          tvalue=dat*2.9841+0.5;
 107   1          t=(uint)tvalue;
 108   1          b[0]=(t/10000)%10;
 109   1          b[1]=(t/1000)%10;
 110   1          b[2]=(t/100)%10;
 111   1          b[3]=(t/10)%10;
 112   1          b[4]=(t/1)%10;
 113   1          lcdwrite_com(0x80+0x40);    
 114   1          lcdwrite_data(0x30+b[0]); 
 115   1          lcdwrite_data(0x30+b[1]);
C51 COMPILER V9.54   MAIN                                                                  05/29/2017 15:21:37 PAGE 3   

 116   1          lcdwrite_data(0x30+b[2]);
 117   1          lcdwrite_data('.');
 118   1          lcdwrite_data(0x30+b[3]);
 119   1          lcdwrite_data(0x30+b[4]);
 120   1      }
 121          
 122          
 123          
 124          void main() {
 125   1          timeinit();
 126   1          lcd1602_init();
 127   1          lcd1602_ground();
 128   1          while(1) {
 129   2              if(!tt) {
 130   3                  dat=read_adc();
 131   3                  lcd1602_refresh();
*** WARNING C209 IN LINE 131 OF main.c: '_lcd1602_refresh': too few actual parameters
 132   3              if(send==1)
 133   3                  uart_send();
 134   3              }
 135   2          }
 136   1      }
 137          void time0()interrupt 1 {
 138   1          TH0=(65536-50000)/256;
 139   1          TL0=(65536-50000)%266;
 140   1          tt++;
 141   1          if(tt>=2) {
 142   2              tt=0;
 143   2          }
 144   1      }
 145          void ser_int (void) interrupt 4 {
 146   1          if(RI == 1) {  
 147   2              RI = 0;  
 148   2              UART_buff = SBUF; 
 149   2              if(UART_buff == '&') {
 150   3                  send = 1;
 151   3              } else  {     
 152   3                  TI = 0;   
 153   3              }
 154   2          }
 155   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    500    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
